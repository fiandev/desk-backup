#!/bin/sh

# ==============================================================================
# DESK-BACKUP INSTALL SCRIPT
# ==============================================================================

# --- COLOR DEFINITIONS ---
GREEN=$(printf '\033[0;32m')
YELLOW=$(printf '\033[1;33m')
RED=$(printf '\033[0;31m')
BLUE=$(printf '\033[0;34m')
NC=$(printf '\033[0m') # No Color

# --- BANNER ---
fn_show_banner() {
    printf "$BLUE"
    echo "
██████╗ ███████╗███████╗██╗  ██╗    ██████╗  █████╗  ██████╗██╗  ██╗██╗   ██╗██████╗ 
██╔══██╗██╔════╝██╔════╝██║ ██╔╝    ██╔══██╗██╔══██╗██╔════╝██║ ██╔╝██║   ██║██╔══██╗
██║  ██║█████╗  ███████╗█████╔╝     ██████╔╝███████║██║     █████╔╝ ██║   ██║██████╔╝
██║  ██║██╔══╝  ╚════██║██╔═██╗     ██╔══██╗██╔══██║██║     ██╔═██╗ ██║   ██║██╔═══╝ 
██████╔╝███████╗███████║██║  ██╗    ██████╔╝██║  ██║╚██████╗██║  ██╗╚██████╔╝██║     
╚═════╝ ╚══════╝╚══════╝╚═╝  ╚═╝    ╚═════╝ ╚═╝  ╚═╝ ╚═════╝╚═╝  ╚═╝ ╚═════╝ ╚═╝     
 $NC                                                                                    
 A collection of shell scripts to automatically back up, restore, and sync a Linux desktop configuration.
 $GREEN
 Created by fiandev
"
    printf "$NC"
}

# --- Configuration ---
INSTALL_DIR="$HOME/.local/bin"

# --- Shell Detection ---
PARENT_PROCESS_NAME=$(ps -o comm= -p $(ps -o ppid= -p $$))
CURRENT_SHELL=""
case "$PARENT_PROCESS_NAME" in
    *fish*) CURRENT_SHELL="fish" ;;
    *bash*) CURRENT_SHELL="bash" ;;
    *zsh*)  CURRENT_SHELL="zsh" ;;
    *)      CURRENT_SHELL=$(basename "$SHELL") ;;
esac

# --- Main Installation Function ---
main() {
    fn_show_banner
    printf "$BLUE%s$NC\n" "--- Starting Desk-Backup Setup ---"
    INSTRUCTION=""

    # --- Step 1: Create installation directory ---
    printf "$BLUE%s$NC\n" "-> Ensuring installation directory exists at $INSTALL_DIR..."
    mkdir -p "$INSTALL_DIR"
    printf "$GREEN%s$NC\n" "   ...Done."

    # --- Step 2: Copy the main script ---
    printf "$BLUE%s$NC\n" "-> Copying the 'deskbackup' script to $INSTALL_DIR..."
    cp ./deskbackup "$INSTALL_DIR/"
    chmod +x "$INSTALL_DIR/deskbackup"
    printf "$GREEN%s$NC\n" "   ...Done."

    # --- Step 3: Install shell-specific aliases ---
    printf "$BLUE%s$NC\n" "-> Detected shell: $CURRENT_SHELL. Installing aliases..."

    case "$CURRENT_SHELL" in
        bash|zsh)
            ALIAS_FILE_PATH="$(pwd)/aliases.sh"
            CONFIG_FILE="$HOME/.bashrc"
            if [ "$CURRENT_SHELL" = "zsh" ]; then
                CONFIG_FILE="$HOME/.zshrc"
            fi

            printf "   -> Adding source line to $CONFIG_FILE...\n"
            if ! grep -q "source $ALIAS_FILE_PATH" "$CONFIG_FILE"; then
                printf "\n# Load Desk-Backup aliases\n" >> "$CONFIG_FILE"
                printf "source %s\n" "$ALIAS_FILE_PATH" >> "$CONFIG_FILE"
                printf "$GREEN%s$NC\n" "   ...Successfully added source line."
            else
                printf "$YELLOW%s$NC\n" "   ...Source line already exists. Skipping."
            fi
            INSTRUCTION="source $CONFIG_FILE"
            ;;
        fish)
            FISH_FUNC_DIR="$HOME/.config/fish/functions"
            mkdir -p "$FISH_FUNC_DIR"
            printf "   -> Copying fish function files...\n"
            cp ./*.fish "$FISH_FUNC_DIR/"
            printf "$GREEN%s$NC\n" "   ...Done."
            INSTRUCTION="exec fish"
            ;;
        *)
            printf "$RED%s$NC\n" "⚠️ WARNING: Unsupported shell '$CURRENT_SHELL'."
            printf "$YELLOW%s$NC\n" "You will need to manually install the aliases."
            exit 1
            ;;
    esac

    # --- Final Instructions ---
    if [ -n "$INSTRUCTION" ]; then
        printf "\n$GREEN%s$NC\n" "--- ✅ SETUP COMPLETE ---"
        printf "$GREEN%s$NC\n" "The 'deskbackup' command is installed."
        printf "$YELLOW%s$NC\n" "To activate the aliases, please run the following command:"
        printf "    $INSTRUCTION\n"
        printf "$YELLOW%s$NC\n" "After that, you can run 'desk-import' to restore your configuration."
    fi
}

# Run the main function
main